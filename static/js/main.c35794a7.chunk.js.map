{"version":3,"sources":["components/Joke.js","img/robot.svg","context/settingsContext.js","components/robotSettings/settings.js","service/SettingOptions.js","img/settings.png","components/robotSettings/settingButton.js","components/buttonChange.js","components/robotImage/robotImg.js","img/robot-searching.gif","img/robot-listening.gif","img/robot-not-found.svg","img/robot-talking.gif","components/robotImage/useImg.js","Hooks/useJoke.js","service/getJokes.js","components/speaker/speaker.js","components/principalContainer.js","App.js","reportWebVitals.js","index.js","components/robotSettings/settings.module.css","components/styles.module.css","components/speaker/speaker.module.css"],"names":["Joke","joke","className","Context","React","createContext","SettingContext","children","useState","setting","setSetting","robot_df","imgUrl","setImgUrl","Provider","value","SETTINGS_OPTIONS","Settings","useContext","handleChanges","e","target","name","Object","keys","map","opt","htmlFor","defaultValue","onChange","values","val","i","SettingButton","show","setShow","sty","setting_container","type","onClick","setting_button","src","icon","alt","rotate","fadeInLeft","fadeOutLeft","ButtonChange","RobotImg","width","UseImg","robot_sc","robot_list","robot_error","robot_talk","getImg","useJoke","setJoke","useEffect","lang","category","apiURL","fetch","then","res","json","response","error","message","setup","delivery","GetJokes","jokes","undefined","synth","window","speechSynthesis","FindValue","data_val","console","log","Speaker","langVal","jokeText","setJokeText","setLang","VOICES","getVoices","sort","a","b","aname","toUpperCase","bname","speak_button","utterThis","SpeechSynthesisUtterance","onend","cancel","onerror","length","voice","alert","speak","PrincipalContainer","tabIndex","joke_container","robot_img","joke_text","joke_buttons","joke_button_joke","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c35794a7.chunk.js","sourcesContent":["function Joke({joke, className}) {\r\n  return ( \r\n      <p className={className}>{joke}</p>\r\n  );\r\n}\r\n\r\nexport default Joke;","export default __webpack_public_path__ + \"static/media/robot.a4372432.svg\";","import React,{ useState } from \"react\";\r\nimport robot_df from 'img/robot.svg'\r\n\r\nconst Context = React.createContext({})\r\n\r\n export function SettingContext ({children}){\r\n\r\n   const [setting, setSetting] = useState({\r\n    \"lang\":\"en\",\r\n    \"category\":\"Any\"\r\n    })\r\n\r\n   const [imgUrl, setImgUrl] = useState(robot_df)\r\n   \r\n    return (\r\n        <Context.Provider value={{setting, setSetting,imgUrl, setImgUrl}}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default Context","import { useContext } from \"react\";\r\nimport  SettingContext  from \"context/settingsContext\";\r\nimport { SettingOptions } from \"service/SettingOptions\";\r\nconst SETTINGS_OPTIONS = SettingOptions\r\n\r\nfunction Settings({className}) {\r\n  const {setting, setSetting} = useContext(SettingContext)\r\n  \r\n //Update options\r\n  const handleChanges = (e)=>{\r\n    setSetting({...setting, [e.target.name]: e.target.value})\r\n  }\r\n  \r\n  return ( \r\n  <form className={className}>\r\n    {\r\n    Object.keys(SETTINGS_OPTIONS).map(opt=>{            \r\n      return <div key={\"div_\"+opt}>\r\n        <div>\r\n          <label htmlFor={opt}>{opt}</label>\r\n        </div>\r\n        <div>\r\n          <select name={opt}\r\n          defaultValue={Object.keys(SETTINGS_OPTIONS[opt])[0]} onChange={handleChanges}> \r\n          {\r\n            Object.values(SETTINGS_OPTIONS[opt]).map((val, i)=>{ \r\n              return <option key={\"opt_\"+val} value={Object.keys(SETTINGS_OPTIONS[opt])[i]}>{val}</option>\r\n            })\r\n          }\r\n          </select>          \r\n        </div>\r\n      </div>\r\n    })\r\n    }\r\n  </form>\r\n   )\r\n\r\n}\r\n\r\nexport default Settings;","export const SettingOptions= {\r\n    'lang':{\r\n        \"en\":\"English\",\r\n        \"de\":\"German\",\r\n        \"es\":\"Spanish\",\r\n        \"fr\":\"French\",\r\n        \"pt\":\"Portuguese\"\r\n    },\r\n    'category':{\r\n        \"Any\":\"Any\",\r\n        \"Programming\":\"Programming\",\r\n        \"Christmas\":\"Christmas\",\r\n        \"Dark\":\"Dark\",\r\n        \"Misc\":\"Misc\",\r\n        \"Pun\":\"Pun\",\r\n        \"Spooky\":\"Spooky\"\r\n    }\r\n  }","export default __webpack_public_path__ + \"static/media/settings.46a87e86.png\";","import { useState } from 'react';\r\nimport Settings from './settings';\r\nimport icon from 'img/settings.png'\r\nimport sty from './settings.module.css'\r\n\r\nfunction SettingButton() {\r\n    const [show, setShow]= useState(false)\r\n\r\n    const handleClick=()=>{\r\n        setShow(!show)\r\n    }\r\n\r\n    return (\r\n        <div className={sty.setting_container}>\r\n            <button type=\"button\" onClick={handleClick}\r\n            className={sty.setting_button}>\r\n                <img src={icon} alt=\"Settings button\"\r\n                className={(show)?sty.rotate:null}/>\r\n            </button>\r\n            {\r\n                (show)?<Settings className={(show)? sty.fadeInLeft:sty.fadeOutLeft}/>:null\r\n            }\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default SettingButton;","import { useContext } from 'react';\r\nimport  SettingContext  from 'context/settingsContext';\r\n\r\nfunction ButtonChange({className}) {\r\n    const {setting, setSetting} = useContext(SettingContext)\r\n    \r\n    const handleClick=()=>{\r\n        setSetting({...setting})\r\n    }\r\n    \r\n    return ( \r\n        <button type=\"button\" onClick={handleClick} className={className}>find another joke</button>\r\n     )\r\n}\r\n\r\nexport default ButtonChange;","\r\nfunction RobotImg({src, className, width}) {\r\n  \r\n  return (\r\n      <img src={src}\r\n      alt=\"Robot\"\r\n      className={className} width={width}/>\r\n    )\r\n}\r\n\r\nexport default RobotImg;","export default __webpack_public_path__ + \"static/media/robot-searching.049cc040.gif\";","export default __webpack_public_path__ + \"static/media/robot-listening.bd138e28.gif\";","export default __webpack_public_path__ + \"static/media/robot-not-found.6feefce6.svg\";","export default __webpack_public_path__ + \"static/media/robot-talking.9719b4bf.gif\";","\r\nimport robot_df from 'img/robot.svg'\r\nimport robot_sc from 'img/robot-searching.gif'\r\nimport robot_list from 'img/robot-listening.gif'\r\nimport robot_error from 'img/robot-not-found.svg'\r\nimport robot_talk from 'img/robot-talking.gif'\r\n\r\nexport default function UseImg(name){  \r\n    const getImg =(src)=>{\r\n        switch (src){\r\n          case 'default': \r\n              return robot_df\r\n          case 'search': \r\n              return robot_sc\r\n          case 'listening': \r\n              return robot_list\r\n          case 'error': \r\n              return robot_error\r\n          case 'talk': \r\n          return robot_talk\r\n          default:\r\n            return robot_list\r\n      }\r\n    }\r\n    return getImg(name)\r\n}","import { useState , useEffect, useContext} from 'react';\r\nimport SettingContext from 'context/settingsContext';\r\nimport GetJokes from '../service/getJokes'\r\nimport UseImg from \"components/robotImage/useImg\";\r\n\r\nexport default function useJoke(){\r\n\r\n    const {setting} = useContext(SettingContext)    \r\n    const {setImgUrl}= useContext(SettingContext)\r\n    const [joke, setJoke] = useState('')\r\n  \r\n    useEffect(function (){\r\n      setImgUrl(UseImg('search'))\r\n      GetJokes(\r\n            {lang: setting['lang'], category: setting['category']}\r\n            ).then(res => {\r\n                setJoke(res)\r\n                if(res.error){\r\n                  setImgUrl(UseImg('error'))\r\n                }else{\r\n                  setImgUrl(UseImg('default'))\r\n                }\r\n                \r\n            })\r\n    },[setting,setImgUrl])   \r\n\r\n      if(!joke.error){\r\n        if(joke !== undefined && joke.type ==='twopart'){\r\n          return ({ jokes:`${joke.setup}. ${joke.delivery}`})\r\n         }else if(joke !== undefined && joke.type ==='single'){\r\n            return ({ jokes: joke.joke})\r\n         } else{\r\n           return { jokes:''}\r\n         }\r\n      } else{\r\n        return {jokes: joke.message}\r\n      }\r\n\r\n\r\n}","\r\nexport default function GetJokes({lang, category}={}){\r\n    const apiURL = `https://v2.jokeapi.dev/joke/${category}?lang=${lang}`\r\n\r\n    return fetch(apiURL)\r\n    .then(res => res.json())\r\n    .then(response =>{  \r\n        const {type} = response  \r\n        const {error} = response  \r\n      if(!error){\r\n        if (type ===\"twopart\"){\r\n          const {setup} = response\r\n          const {delivery} = response\r\n        return {setup, delivery, type, error}            \r\n      }else{     \r\n          const {joke} = response\r\n        return {joke, type, error}\r\n      }\r\n      }else{\r\n        const {message} = response\r\n        return {error, message}\r\n      }\r\n     \r\n    })\r\n\r\n}","import sty from './speaker.module.css'\r\nimport { useState, useEffect,useContext } from 'react';\r\nimport SettingContext from 'context/settingsContext';\r\nimport UseImg from \"components/robotImage/useImg\";\r\n\r\nconst synth = window.speechSynthesis;\r\n\r\nconst getVoices=()=>{   \r\n    let voices =[]\r\n    voices = synth.getVoices().sort(function (a, b) {\r\n        const aname = a.name.toUpperCase(), bname = b.name.toUpperCase();\r\n        if ( aname < bname ) return -1;\r\n        else if ( aname === bname ) return 0;\r\n        else return +1;\r\n    })\r\n    return voices\r\n}\r\n\r\nconst FindValue = (data_val)=>{\r\n    switch (data_val){\r\n        case 'en': \r\n            return 'Microsoft George - English (United Kingdom)'\r\n        case 'es': \r\n            return 'Google español'\r\n        case 'de': \r\n            return 'Google Deutsch'\r\n        case 'fr': \r\n            return 'Google français'\r\n        case 'pt': \r\n        return 'Google português do Brasil'\r\n        default:\r\n            console.log('Lenguaje no encontrado')\r\n    }\r\n}\r\n\r\nfunction Speaker({joke, langVal}) {\r\n    const [jokeText, setJokeText] = useState(joke)\r\n    const [lang, setLang] = useState(FindValue(langVal))\r\n    const {setImgUrl}= useContext(SettingContext)\r\n\r\n    const VOICES = getVoices()\r\n\r\n    //handle joke change\r\n    useEffect(function(){\r\n        setJokeText(joke)\r\n    }, [joke])\r\n\r\n    //handle lang change\r\n    useEffect(function(){\r\n        setLang(FindValue(langVal))\r\n    }, [langVal])\r\n\r\n\r\n    const handleClick =()=>{\r\n        setImgUrl(UseImg('talk'))\r\n        let utterThis = new SpeechSynthesisUtterance(jokeText)\r\n\r\n        utterThis.onend = function (e) {\r\n            setImgUrl(UseImg('default'))\r\n            window.speechSynthesis.cancel()\r\n        }\r\n        utterThis.onerror = function (e) {\r\n            console.error('SpeechSynthesisUtterance.onerror');\r\n        }           \r\n        \r\n        for(let i = 0; i < VOICES.length ; i++) {\r\n            if(VOICES[i].name === lang) {\r\n                console.log('encontrado')\r\n                utterThis.voice = VOICES[i];\r\n                break\r\n            }\r\n        }\r\n\r\n        if(utterThis.voice===null&& langVal!=='en'){\r\n        alert('This browser only supports English speaker. Please try in another browser, ex: Google Chrome')\r\n        }            \r\n        synth.speak(utterThis)\r\n    }\r\n\r\n    return ( \r\n        <span className={sty.speak_button}>\r\n          <button onClick={handleClick}>\r\n          📣\r\n          </button>\r\n        </span>\r\n        \r\n     );\r\n}\r\n\r\nexport default Speaker;\r\n","import Joke from './Joke';\r\n//import Settings from './robotSettings/settings';\r\nimport SettingButton from './robotSettings/settingButton';\r\nimport ButtonChange from './buttonChange';\r\nimport RobotImg from './robotImage/robotImg';\r\nimport useJoke from 'Hooks/useJoke';\r\nimport sty from './styles.module.css';\r\nimport Speaker from './speaker/speaker';\r\nimport SettingContext from 'context/settingsContext'\r\nimport { useContext } from 'react';\r\n\r\nexport default function PrincipalContainer(){\r\n    const {jokes} = useJoke()\r\n    const {setting} = useContext(SettingContext)\r\n    const {imgUrl} = useContext(SettingContext)\r\n    \r\n   // keycode: 74\r\n\r\n    return ( \r\n        <section tabIndex=\"0\" className={sty.joke_container}>\r\n          <SettingButton/>\r\n          <RobotImg src={imgUrl} className={sty.robot_img}/>\r\n          \r\n          <Joke joke={jokes} className={sty.joke_text}/>\r\n\r\n        <div className={sty.joke_buttons}>\r\n          <ButtonChange className={sty.joke_button_joke}/>\r\n        {\r\n          (jokes !=='')\r\n            ? \r\n            <Speaker\r\n            joke={jokes}\r\n            langVal={setting.lang}/> \r\n            :null\r\n          }\r\n        </div>     \r\n      </section>\r\n     );\r\n\r\n     \r\n}","\r\nimport PrincipalContainer from './components/principalContainer';\r\nimport  {SettingContext}  from 'context/settingsContext';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n      <SettingContext>\r\n        <PrincipalContainer/>\r\n      </SettingContext>      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setting_container\":\"settings_setting_container__X-8Qz\",\"setting_button\":\"settings_setting_button__347TF\",\"rotate\":\"settings_rotate__29uSB\",\"rotating\":\"settings_rotating__1_Kt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"joke_container\":\"styles_joke_container__N5JGN\",\"robot_img\":\"styles_robot_img__3IwvM\",\"MoveUpDown\":\"styles_MoveUpDown__1xiZD\",\"joke_text\":\"styles_joke_text__1PWJQ\",\"joke_buttons\":\"styles_joke_buttons__28e2f\",\"joke_button_joke\":\"styles_joke_button_joke__1LWrG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"speak_button\":\"speaker_speak_button__39JVw\"};"],"sourceRoot":""}